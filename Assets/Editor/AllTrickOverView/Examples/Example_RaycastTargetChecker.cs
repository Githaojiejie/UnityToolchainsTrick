using AllTrickOverView.Core;

namespace AllTrickOverView.Examples
{
    public class Example_RaycastTargetChecker : AExample_Base
    {
        public static TrickOverViewInfo TrickOverViewInfo =
            new TrickOverViewInfo("RaycastTargetChecker",
                "可使场景中的可点击UI使用描边高亮出来",
                "Scene",
                "using UnityEditor;\nusing UnityEngine.UI;\nusing UnityEngine;\n\nnamespace ToolKits\n{\n    public class RaycastTargetChecker : EditorWindow\n    {\n        private MaskableGraphic[] graphics;\n        private bool hideUnchecked = false;\n        private bool showBorders = true;\n        private Color borderColor = Color.blue;\n        private Vector2 scrollPosition = Vector2.zero;\n\n        private static RaycastTargetChecker instance = null;\n\n        [MenuItem(\"Tools/RaycastTarget Checker\",priority = 51)]\n        private static void Open()\n        {\n            instance = instance ?? EditorWindow.GetWindow<RaycastTargetChecker>(\"RaycastTargets\");\n            instance.Show();\n        }\n\n        void OnEnable()\n        {\n            instance = this;\n        }\n\n        void OnDisable()\n        {\n            instance = null;\n        }\n\n        void OnGUI()\n        {\n            using (EditorGUILayout.HorizontalScope horizontalScope = new EditorGUILayout.HorizontalScope())\n            {\n                showBorders = EditorGUILayout.Toggle(\"Show Gizmos\", showBorders, GUILayout.Width(200.0f));\n                borderColor = EditorGUILayout.ColorField(borderColor);\n            }\n\n            hideUnchecked = EditorGUILayout.Toggle(\"Hide Unchecked\", hideUnchecked);\n\n            GUILayout.Space(12.0f);\n            Rect rect = GUILayoutUtility.GetLastRect();\n            GUI.color = new Color(0.0f, 0.0f, 0.0f, 0.25f);\n            GUI.DrawTexture(new Rect(0.0f, rect.yMin + 6.0f, Screen.width, 4.0f), EditorGUIUtility.whiteTexture);\n            GUI.DrawTexture(new Rect(0.0f, rect.yMin + 6.0f, Screen.width, 1.0f), EditorGUIUtility.whiteTexture);\n            GUI.DrawTexture(new Rect(0.0f, rect.yMin + 9.0f, Screen.width, 1.0f), EditorGUIUtility.whiteTexture);\n            GUI.color = Color.white;\n\n            graphics = GameObject.FindObjectsOfType<MaskableGraphic>();\n\n            EditorGUI.BeginChangeCheck();\n            using (GUILayout.ScrollViewScope scrollViewScope = new GUILayout.ScrollViewScope(scrollPosition))\n            {\n                scrollPosition = scrollViewScope.scrollPosition;\n                for (int i = 0; i < graphics.Length; i++)\n                {\n                    MaskableGraphic graphic = graphics[i];\n                    if (hideUnchecked == false || graphic.raycastTarget == true)\n                    {\n                        DrawElement(graphic);\n                    }\n                }\n            }\n\n            if (EditorGUI.EndChangeCheck())\n            {\n                foreach (var item in graphics)\n                {\n                    EditorUtility.SetDirty(item);\n                }\n            }\n\n            Repaint();\n        }\n\n        private void DrawElement(MaskableGraphic graphic)\n        {\n            using (EditorGUILayout.HorizontalScope horizontalScope = new EditorGUILayout.HorizontalScope())\n            {\n                Undo.RecordObject(graphic, \"Modify RaycastTarget\");\n                graphic.raycastTarget = EditorGUILayout.Toggle(graphic.raycastTarget, GUILayout.Width(20));\n                EditorGUI.BeginDisabledGroup(true);\n                EditorGUILayout.ObjectField(graphic, typeof(MaskableGraphic), true);\n                EditorGUI.EndDisabledGroup();\n            }\n        }\n\n        [DrawGizmo(GizmoType.Selected | GizmoType.NonSelected)]\n        private static void DrawGizmos(MaskableGraphic source, GizmoType gizmoType)\n        {\n            if (instance != null && instance.showBorders == true && source.raycastTarget == true)\n            {\n                Vector3[] corners = new Vector3[4];\n                source.rectTransform.GetWorldCorners(corners);\n                Gizmos.color = instance.borderColor;\n                for (int i = 0; i < 4; i++)\n                {\n                    Gizmos.DrawLine(corners[i], corners[(i + 1) % 4]);\n                }\n\n                if (Selection.activeGameObject == source.gameObject)\n                {\n                    Gizmos.DrawLine(corners[0], corners[2]);\n                    Gizmos.DrawLine(corners[1], corners[3]);\n                }\n            }\n\n            SceneView.RepaintAll();\n        }\n    }\n}",
                "Assets/Editor/Examples/Example_51_RaycastTargetChecker",
                typeof(Example_RaycastTargetChecker),
                picPath : "Assets/Editor/Examples/Example_51_RaycastTargetChecker/QQ截图20210617215027.png",
                videoPath : "");

        public override TrickOverViewInfo GetTrickOverViewInfo()
        {
            return TrickOverViewInfo;
        }
    }
}
